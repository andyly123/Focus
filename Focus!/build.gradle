buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
}

dependencies {
    compile 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion
    annotationProcessor 'android.arch.persistence.room:compiler:' + rootProject.archRoomVersion

    compile 'com.android.support:support-v4:24.0.0-alpha1'
    compile 'com.android.support:support-v13:24.0.0-alpha1'
    compile 'com.android.support:cardview-v7:24.0.0-alpha1'
    compile 'com.android.support:appcompat-v7:24.0.0-alpha1'
    compile 'android.arch.lifecycle:runtime:1.0.0'
    compile 'android.arch.lifecycle:extensions:1.0.0-beta2'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.aurelhubert:ahbottomnavigation:2.0.4'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    annotationProcessor 'android.arch.lifecycle:compiler:1.0.0-beta2'
    compile 'com.github.alamkanak:android-week-view:1.2.6'

    //Espresso dependencies
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-intents:2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    //UIAutomator dependency
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'

}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 24
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        /*
        sourceSets {
            main {
                dirs.each { dir ->
                    java.srcDirs "src/${dir}/java"
                    res.srcDirs "src/${dir}/res"
                }
            }
            androidTest.setRoot('tests')
            androidTest.java.srcDirs = ['tests/src']

        }*/

    }
    //sourceSets { main { java.srcDirs = ['src/main/java', 'src/androidTest/java'] } }
}